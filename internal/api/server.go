package api

import (
	"log"
	"net/http"
	"strconv"

	"github.com/gin-gonic/gin"
)

type tender struct {
	Id          int
	Url         string
	Img         string
	Title       string
	Description string
}

const (
	title1 = `Повседневная практика показывает, что реализация намеченных плановых заданий обеспечивает широкому кругу (специалистов) участие в формировании направлений прогрессивного развития. Не следует, однако забывать, что дальнейшее развитие различных форм деятельности требуют определения и уточнения дальнейших направлений развития.

	Идейные соображения высшего порядка, а также постоянный количественный рост и сфера нашей активности требуют определения и уточнения системы обучения кадров, соответствует насущным потребностям. С другой стороны укрепление и развитие структуры требуют определения и уточнения дальнейших направлений развития.`
	title2 = `Таким образом постоянный количественный рост и сфера нашей активности в значительной степени обуславливает создание существенных финансовых и административных условий. Не следует, однако забывать, что сложившаяся структура организации обеспечивает широкому кругу (специалистов) участие в формировании дальнейших направлений развития. Повседневная практика показывает, что реализация намеченных плановых заданий влечет за собой процесс внедрения и модернизации дальнейших направлений развития. `
	title3 = `Не следует, однако забывать, что начало повседневной работы по формированию позиции требуют определения и уточнения соответствующий условий активизации. Значимость этих проблем настолько очевидна, что дальнейшее развитие различных форм деятельности способствует подготовки и реализации форм развития. Идейные соображения высшего порядка, а также сложившаяся структура организации позволяет выполнять важные задания по разработке направлений прогрессивного развития. С другой стороны новая модель организационной деятельности способствует подготовки и реализации дальнейших направлений развития. `
)

func StartServer() {

	tenderSlice := []tender{
		{1, "tednder/1", "image/img1.jpg", "Проект Стадион", title1},
		{2, "tender/2", "image/img2.jpg", "Проект Дом", title2},
		{3, "tender/3", "image/img3.jpg", "Проект завод", title3},
	}

	log.Println("Server start up")

	r := gin.Default()

	r.LoadHTMLGlob("templates/*")

	r.Static("/image", "./resources")

	r.GET("/tenders", func(c *gin.Context) {
		query := c.DefaultQuery("query", "")
		outPut := []tender{}
		if query != "" {
			for _, elem := range tenderSlice {
				if elem.Title == query {
					outPut = append(outPut, elem)
				}
			}

		}
		if len(outPut) == 0 {
			outPut = append(outPut, tenderSlice...)
		}
		c.HTML(http.StatusOK, "index.tmpl", gin.H{
			"card":    outPut,
			"CSSFile": "image/card.css",
		})
		outPut = nil
	})

	r.GET("/tenders/:id", func(c *gin.Context) {
		idGet := c.Param("id")
		id, _ := strconv.Atoi(idGet)
		if id > len(tenderSlice) {
			c.String(http.StatusNotFound, "404 - Not Found")
			return
		}

		c.HTML(http.StatusOK, "pages.tmpl", gin.H{
			"card":    tenderSlice[id-1],
			"CSSFile": "image/card.css",
		})
	})

	r.Run()

	log.Println("Server down")
}
